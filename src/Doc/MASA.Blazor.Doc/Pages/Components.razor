@page "/components/{name}"
@page "/components"
@using MASA.Blazor.Doc.Models
@using MASA.Blazor.Doc.Services
@using MASA.Blazor.Doc.Utils
@using System.Web
@inherits OwningComponentBase<DemoService>
@layout DocLayout

@if (_demoComponent != null)
{
    <section id="@_demoComponent.Title">
        <h1 class="m-heading text-h3 text-sm-h3 mb-4">
            <a herf="@_demoComponent.FullTitle" class="text-decoration-none text-right text-md-left" @onclick="async () => await ScrollToAsync(_demoComponent.Title)"> # </a>
            @_demoComponent.FullTitle
        </h1>

        @((MarkupString)_demoComponent.Desc.FormatLink())

        @if (Usage != null)
        {
            var index = _demoIndex++;
            <section id="@Usage.Title.HashSection()">
                <h1 class="m-heading text-h4 text-sm-h4 mb-3">
                    <a herf="@Usage.Title.HashSection()" class="text-decoration-none text-right text-md-left" @onclick="async () => await ScrollToAsync(Usage.Title.HashSection())"> # </a>
                    @Usage.Title
                </h1>
                <CodeBox @key="_demoComponent.Title" Index="index" Demo="Usage" ComponentName="@_demoComponent.Title"></CodeBox>
            </section>
        }

        @if (_demoComponent.OtherDocs != null)
        {
            foreach (var (title, doc) in _demoComponent.OtherDocs)
            {
                var alerts = doc.SplitByAlertType();

                <section id="@title.HashSection()">
                    <h1 class="m-heading text-h4 text-sm-h4 mb-3">
                        <a herf="@title.HashSection()" class="text-decoration-none text-right text-md-left" @onclick="async () => await ScrollToAsync(title.HashSection())"> # </a>
                        @title
                    </h1>
                    @foreach (var (type, alert) in alerts)
                    {
                        if (type == AlertTypes.None)
                        {
                            var codes = alert.SplitByCode();

                            foreach (var (lang, code) in codes)
                            {
                                if (lang != null)
                                {
                                    <AppCode Code="@HttpUtility.HtmlDecode(code.RemoveWrapTag().RemoveWrapTag())" Language="@lang"></AppCode>
                                }
                                else
                                {
                                    @((MarkupString)code.FormatLink())
                                }
                            }
                        }
                        else
                        {
                            <MAlert Type="@type" Border="Borders.Left" Text Class="m-alert--doc">
                                @((MarkupString)alert.FormatLink())
                            </MAlert>
                        }
                    }
                </section>
            }
        }

        @if (PropsList.Any() || EventsList.Any() || ContentsList.Any() || MiscList.Any())
        {
            var example = DemoItemModel.GenerateExample("zh-CN");

            <section id="examples">
                <h1 class="m-heading text-h4 text-sm-h4 mb-3">
                    <a herf="@example.Title.HashSection()" class="text-decoration-none text-right text-md-left" @onclick="@(async () => await ScrollToAsync("examples"))"> # </a>
                    @example.Title
                </h1>
                @if (PropsList.Any())
                {
                    var props = DemoItemModel.GenerateProps("zh-CN");

                    <section id="props">
                        <h1 class="m-heading text-h5 mb-2">
                            <a herf="#props" class="text-decoration-none text-right text-md-left" @onclick="@(async () => await ScrollToAsync("props"))"> # </a>
                            @props.Title
                        </h1>
                        @foreach (var item in PropsList)
                        {
                            var index = _demoIndex++;
                            <section id="@item.Title.HashSection()">
                                <h1 class="m-heading text-h6 mb-2">
                                    <a herf="@item.Title.HashSection()" class="text-decoration-none text-right text-md-left" @onclick="@(async () => await ScrollToAsync(item.Title.HashSection()))"> # </a>
                                    @item.Title
                                </h1>
                                <CodeBox @key="@($"{_demoComponent.Title}-{item.Title}")" Index="index" Demo="item" ComponentName="@_demoComponent?.Title"></CodeBox>
                            </section>
                        }
                    </section>
                }
                @if (EventsList.Any())
                {
                    var events = DemoItemModel.GenerateEvents("zh-CN");

                    <section id="events">
                        <h1 class="m-heading text-h5 mb-2">
                            <a herf="#events" class="text-decoration-none text-right text-md-left" @onclick="@(async () => await ScrollToAsync("events"))"> # </a>
                            @events.Title
                        </h1>
                        @foreach (var item in EventsList)
                        {
                            var index = _demoIndex++;
                            <section id="@item.Title.HashSection()">
                                <h1 class="m-heading text-h6 mb-2">
                                    <a herf="@item.Title.HashSection()" class="text-decoration-none text-right text-md-left" @onclick="@(async () => await ScrollToAsync(item.Title.HashSection()))"> # </a>
                                    @item.Title
                                </h1>
                                <CodeBox @key="@($"{_demoComponent.Title}-{item.Title}")" Index="index" Demo="item" ComponentName="@_demoComponent?.Title"></CodeBox>
                            </section>
                        }
                    </section>
                }
                @if (ContentsList.Any())
                {
                    var contents = DemoItemModel.GenerateContents("zh-CN");

                    <section id="contents">
                        <h1 class="m-heading text-h5 mb-2">
                            <a herf="#contents" class="text-decoration-none text-right text-md-left" @onclick="@(async () => await ScrollToAsync("contents"))"> # </a>
                            @contents.Title
                        </h1>
                        @foreach (var item in ContentsList)
                        {
                            var index = _demoIndex++;
                            <section id="@item.Title.HashSection()">
                                <h1 class="m-heading text-h6 mb-2">
                                    <a herf="@item.Title.HashSection()" class="text-decoration-none text-right text-md-left" @onclick="@(async () => await ScrollToAsync(item.Title.HashSection()))"> # </a>
                                    @item.Title
                                </h1>
                                <CodeBox @key="@($"{_demoComponent.Title}-{item.Title}")" Index="index" Demo="item" ComponentName="@_demoComponent?.Title"></CodeBox>
                            </section>
                        }
                    </section>
                }
                @if (MiscList.Any())
                {
                    var misc = DemoItemModel.GenerateMisc("zh-CN");

                    <section id="misc">
                        <h1 class="m-heading text-h5 mb-2">
                            <a herf="#misc" class="text-decoration-none text-right text-md-left" @onclick="@(async () => await ScrollToAsync("misc"))"> # </a>
                            @misc.Title
                        </h1>
                        @foreach (var item in MiscList)
                        {
                            var index = _demoIndex++;
                            <section id="@item.Title.HashSection()">
                                <h1 class="m-heading text-h6 mb-2">
                                    <a herf="@item.Title.HashSection()" class="text-decoration-none text-right text-md-left" @onclick="@(async () => await ScrollToAsync(item.Title.HashSection()))"> # </a>
                                    @item.Title
                                </h1>
                                <CodeBox @key="@($"{_demoComponent.Title}-{item.Title}")" Index="index" Demo="item" ComponentName="@_demoComponent?.Title"></CodeBox>
                            </section>
                        }
                    </section>
                }
            </section>
        }
    </section>
    <section id="@("了解更多？".HashSection())" class="mt-12">
        <h1 class="m-heading text-h3 text-sm-h3 mb-4">
            <a herf="@("了解更多？".HashSection())" class="text-decoration-none text-right text-md-left" @onclick="@(async () => await ScrollToAsync("了解更多？".HashSection()))"> # </a>
            了解更多？
        </h1>
        <div class="mb-3">
            继续学习由
            <ALink Href="/about/meet-the-team">我们的团队</ALink>
            选择的相关内容，或通过使用下面的导航链接在页面之间跳转。
        </div>
        <RelatedPages Related="@_demoComponent?.Related" />
        <MDivider Class="my-6 mt-7 mb-5"></MDivider>
        <BottomNav></BottomNav>
        <div>
            <div class="blue-grey--text text--darken-1 d-flexalign-center justify-space-between">
                <div class="font-weight-medium d-flex align-baseline grow flex-wrap">
                    <span class="mb-2 mb-md-0">
                        在
                        <ALink Href="@GithubUrlHref">Github</ALink>
                        上编辑此页面
                    </span>
                    <div class="spacer hidden-sm-and-down"></div>
                    <div class="text-body-2">
                        <span class="font-weight-medium mr-1">最后更新：</span>
                        <span class="text--secondary">@_demoComponent.LastWriteTime</span>
                    </div>
                </div>
            </div>
        </div>
    </section>
}